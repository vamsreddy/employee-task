{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const employees = JSON.parse(localStorage.getItem('employees_data'));\n  const [isAdding, setIsAdding] = useState(false);\n  console.log(employees);\n  const handleAdd = async e => {\n    e.preventDefault();\n    if (!firstName || !lastName || !email) {\n      alert('Error! All fields are required.');\n      return;\n    }\n    const existingEmployee = employees.find(emp => emp.email === email);\n    if (existingEmployee) {\n      alert('User is already registered with the same email');\n      return; // Exit the function early if user already exists\n    }\n    const id = (employees === null || employees === void 0 ? void 0 : employees.length) + 1;\n    const newEmployee = {\n      id,\n      firstName,\n      lastName,\n      email\n    };\n    const updatedEmployees = [...employees, newEmployee];\n    localStorage.setItem('employees_data', JSON.stringify(updatedEmployees));\n    // setEmployees(updatedEmployees); // Uncomment if you use this state in your parent component\n    // setIsAdding(false); // Uncomment to close the form after adding an employee\n    try {\n      // Send email using EmailJS\n      const templateParams = {\n        to_name: `${firstName} ${lastName}`,\n        subject: 'Welcome to the Company'\n      };\n      console.log(email);\n      await emailjs.send('service_qm7s8ga',\n      // Replace with your EmailJS Service ID\n      'template_eibtv84',\n      // Replace with your EmailJS Template ID\n      templateParams, email);\n      alert(`Added! ${firstName} ${lastName}'s data has been added, and a welcome email has been sent.`);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('Error! Failed to send email.');\n    }\n\n    // alert(`Added! ${firstName} ${lastName}'s data has been added.`);\n    // navigate('/dashboard');\n  };\n  const handleCancel = () => {\n    // Uncomment the following line to close the form without adding an employee\n    setIsAdding(false);\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        required: true,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        required: true,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button muted-button\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button muted-button\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"MeWlEnWqInWAug33To2oDWXhmXc=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Create","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","navigate","employees","JSON","parse","localStorage","getItem","isAdding","setIsAdding","console","log","handleAdd","e","preventDefault","alert","existingEmployee","find","emp","id","length","newEmployee","updatedEmployees","setItem","stringify","templateParams","to_name","subject","emailjs","send","error","handleCancel","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","value","required","onChange","target","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/create.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Create = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const employees = JSON.parse(localStorage.getItem('employees_data'));\n  const [isAdding, setIsAdding] = useState(false);\n\n  console.log(employees);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email) {\n      alert('Error! All fields are required.');\n      return;\n    }\n\n    const existingEmployee = employees.find((emp) => emp.email === email);\n    if (existingEmployee) {\n      alert('User is already registered with the same email');\n      return; // Exit the function early if user already exists\n    }\n    const id = employees?.length + 1;\n    const newEmployee = {\n      id,\n      firstName,\n      lastName,\n      email,\n    };\n\n    const updatedEmployees = [...employees, newEmployee];\n    localStorage.setItem('employees_data', JSON.stringify(updatedEmployees));\n    // setEmployees(updatedEmployees); // Uncomment if you use this state in your parent component\n    // setIsAdding(false); // Uncomment to close the form after adding an employee\n    try {\n      // Send email using EmailJS\n      const templateParams = {\n        to_name: `${firstName} ${lastName}`,\n        subject: 'Welcome to the Company',\n      };\n      console.log(email);\n      await emailjs.send(\n        'service_qm7s8ga', // Replace with your EmailJS Service ID\n        'template_eibtv84', // Replace with your EmailJS Template ID\n        templateParams,\n        email\n      );\n\n      alert(\n        `Added! ${firstName} ${lastName}'s data has been added, and a welcome email has been sent.`\n      );\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('Error! Failed to send email.');\n    }\n\n    // alert(`Added! ${firstName} ${lastName}'s data has been added.`);\n    // navigate('/dashboard');\n  };\n\n  const handleCancel = () => {\n    // Uncomment the following line to close the form without adding an employee\n    setIsAdding(false);\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className='small-container'>\n      <form onSubmit={handleAdd}>\n        <h1>Add Employee</h1>\n        <label htmlFor='firstName'>First Name</label>\n        <input\n          id='firstName'\n          type='text'\n          name='firstName'\n          value={firstName}\n          required\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n        <label htmlFor='lastName'>Last Name</label>\n        <input\n          id='lastName'\n          type='text'\n          name='lastName'\n          value={lastName}\n          required\n          onChange={(e) => setLastName(e.target.value)}\n        />\n        <label htmlFor='email'>Email</label>\n        <input\n          id='email'\n          type='email'\n          name='email'\n          value={email}\n          required\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input className='button muted-button' type='submit' value='Add' />\n          <input\n            className='button muted-button'\n            type='button'\n            value='Cancel'\n            onClick={handleCancel}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}