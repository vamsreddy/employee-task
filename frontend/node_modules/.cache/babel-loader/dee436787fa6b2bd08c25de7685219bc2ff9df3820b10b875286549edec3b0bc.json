{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/message.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageModal = ({\n  isOpen,\n  message,\n  onConfirm,\n  onClose,\n  data,\n  need,\n  Yes,\n  No\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    contentLabel: \"Message Modal\",\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        maxWidth: '400px',\n        // Adjust the maximum width as per your requirement\n        maxHeight: '80vh',\n        // Adjust the maximum height as per your requirement\n        overflow: 'auto' // Enable scrolling if the content overflows the modal\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), need === true ? data === true ?\n    /*#__PURE__*/\n    // Check if data is 'buttons'\n    _jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'red'\n        },\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) :\n    /*#__PURE__*/\n    // Otherwise, render default buttons\n    _jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onConfirm,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Yes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'red'\n        },\n        onClick: No,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageModal;\nexport default MessageModal;\nvar _c;\n$RefreshReg$(_c, \"MessageModal\");","map":{"version":3,"names":["React","Modal","jsxDEV","_jsxDEV","MessageModal","isOpen","message","onConfirm","onClose","data","need","Yes","No","contentLabel","style","content","top","left","right","bottom","marginRight","transform","maxWidth","maxHeight","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","backgroundColor","onClick","textAlign","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/message.js"],"sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nconst MessageModal = ({\n  isOpen,\n  message,\n  onConfirm,\n  onClose,\n  data,\n  need,\n  Yes,\n  No,\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentLabel='Message Modal'\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          maxWidth: '400px', // Adjust the maximum width as per your requirement\n          maxHeight: '80vh', // Adjust the maximum height as per your requirement\n          overflow: 'auto', // Enable scrolling if the content overflows the modal\n        },\n      }}\n    >\n      <h2>Message</h2>\n      <p>{message}</p>\n      {need === true ? (\n        data === true ? ( // Check if data is 'buttons'\n          <div\n            style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}\n          >\n            <button\n              style={{\n                backgroundColor: 'red',\n              }}\n              onClick={onClose}\n            >\n              Close\n            </button>\n          </div>\n        ) : (\n          // Otherwise, render default buttons\n          <div style={{ textAlign: 'center' }}>\n            <button onClick={onConfirm}>Ok</button>\n          </div>\n        )\n      ) : (\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\n          <button onClick={Yes}>Yes</button>\n          <button style={{ backgroundColor: 'red' }} onClick={No}>\n            No\n          </button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default MessageModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,MAAM;EACNC,OAAO;EACPC,SAAS;EACTC,OAAO;EACPC,IAAI;EACJC,IAAI;EACJC,GAAG;EACHC;AACF,CAAC,KAAK;EACJ,oBACET,OAAA,CAACF,KAAK;IACJI,MAAM,EAAEA,MAAO;IACfQ,YAAY,EAAC,eAAe;IAC5BC,KAAK,EAAE;MACLC,OAAO,EAAE;QACPC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,MAAM;QACnBC,SAAS,EAAE,uBAAuB;QAClCC,QAAQ,EAAE,OAAO;QAAE;QACnBC,SAAS,EAAE,MAAM;QAAE;QACnBC,QAAQ,EAAE,MAAM,CAAE;MACpB;IACF,CAAE;IAAAC,QAAA,gBAEFtB,OAAA;MAAAsB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB1B,OAAA;MAAAsB,QAAA,EAAInB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfnB,IAAI,KAAK,IAAI,GACZD,IAAI,KAAK,IAAI;IAAA;IAAK;IAChBN,OAAA;MACEW,KAAK,EAAE;QAAEgB,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAP,QAAA,eAElEtB,OAAA;QACEW,KAAK,EAAE;UACLmB,eAAe,EAAE;QACnB,CAAE;QACFC,OAAO,EAAE1B,OAAQ;QAAAiB,QAAA,EAClB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;IAAA;IAEN;IACA1B,OAAA;MAAKW,KAAK,EAAE;QAAEqB,SAAS,EAAE;MAAS,CAAE;MAAAV,QAAA,eAClCtB,OAAA;QAAQ+B,OAAO,EAAE3B,SAAU;QAAAkB,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN,gBAED1B,OAAA;MAAKW,KAAK,EAAE;QAAEgB,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACrEtB,OAAA;QAAQ+B,OAAO,EAAEvB,GAAI;QAAAc,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClC1B,OAAA;QAAQW,KAAK,EAAE;UAAEmB,eAAe,EAAE;QAAM,CAAE;QAACC,OAAO,EAAEtB,EAAG;QAAAa,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ,CAAC;AAACO,EAAA,GA5DIhC,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}