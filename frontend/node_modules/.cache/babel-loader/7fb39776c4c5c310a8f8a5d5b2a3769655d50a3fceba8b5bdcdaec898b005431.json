{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Register/register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isMessageOpen, setIsMessageOpen] = useState(false);\n  const [data, setData] = useState(false);\n  const handleCloseMessage = () => {\n    setIsMessageOpen(false);\n  };\n  const handleCancel = () => {\n    navigate('/'); // Navigate to the login page\n  };\n\n  // const handleRegister = (e) => {\n  //   e.preventDefault(); // Prevent form submission default behavior\n\n  //   // if (email === '') {\n  //   //   // setMessage('Please enter a valid email');\n  //   //   // setIsMessageOpen(true);\n  //   // } else if (username === '') {\n  //   //   // setMessage('Please enter a valid username');\n  //   //   // setIsMessageOpen(true);\n  //   // } else if (password === '') {\n  //   //   // setMessage('Please enter a valid password');\n  //   //   // setIsMessageOpen(true);\n  //   // } else {\n\n  //   const uppercaseRegex = /[A-Z]/;\n  //   const lowercaseRegex = /[a-z]/;\n  //   const numberRegex = /[0-9]/;\n  //   const symbolRegex = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/;\n\n  //   // Check if email, username, and password are provided\n  //   if (email === '' || username === '' || password === '') {\n  //     setMessage('Please fill in all fields');\n  //     setIsMessageOpen(true);\n  //     return;\n  //   }\n\n  //   // Check if password meets criteria\n  //   if (\n  //     password.length < 8 ||\n  //     !uppercaseRegex.test(password) ||\n  //     !lowercaseRegex.test(password) ||\n  //     !numberRegex.test(password) ||\n  //     !symbolRegex.test(password)\n  //   ) {\n  //     setMessage(\n  //       'Password must be at least 8 characters long and contain uppercase letters, lowercase letters, numbers, and symbols'\n  //     );\n  //     setIsMessageOpen(true);\n  //     return;\n  //   }\n\n  //   // Assuming localStorage key for users is 'users'\n  //   const existingUsers = JSON.parse(localStorage.getItem('users')) || [];\n\n  //   // Check if the username already exists using a loop\n  //   let userExists = false;\n  //   for (const user of existingUsers) {\n  //     if (user.email === email) {\n  //       userExists = true;\n  //       break;\n  //     }\n  //   }\n\n  //   if (userExists) {\n  //     setMessage('Email already exists. Please choose a different one.');\n  //     setData(true);\n  //     setIsMessageOpen(true);\n  //   } else {\n  //     // Add the new user to the local storage\n  //     const newUser = { email, username, password };\n  //     existingUsers.push(newUser);\n  //     localStorage.setItem('users', JSON.stringify(existingUsers));\n  //     setData(false);\n  //     // Notify the user about successful registration\n  //     setMessage('Registration successful!');\n  //     setIsMessageOpen(true);\n  //   }\n  //   // }\n  // };\n\n  const handleOkMessage = () => {\n    setIsMessageOpen(false);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register-container\",\n    onSubmit: handleRegister,\n    children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mail\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"mail\",\n          type: \"email\",\n          placeholder: \"enter email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          placeholder: \"enter username\",\n          value: username,\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pass\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pass\",\n          type: \"password\",\n          placeholder: \"enter password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button muted-button\",\n          type: \"submit\",\n          children: [' ', \"Register\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: 'red',\n            marginTop: '10px',\n            color: 'white'\n          },\n          className: \"button muted-button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      isOpen: isMessageOpen,\n      message: message,\n      onConfirm: handleOkMessage,\n      onClose: handleCloseMessage,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"neJO7PMvOtDZ2VrNghMiKcp8UKI=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","MessageModal","jsxDEV","_jsxDEV","Register","_s","navigate","email","setEmail","username","setUsername","password","setPassword","message","setMessage","isMessageOpen","setIsMessageOpen","data","setData","handleCloseMessage","handleCancel","handleOkMessage","className","onSubmit","handleRegister","children","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","placeholder","required","value","onChange","e","target","style","backgroundColor","marginTop","color","onClick","isOpen","onConfirm","onClose","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Register/register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isMessageOpen, setIsMessageOpen] = useState(false);\n  const [data, setData] = useState(false);\n\n  const handleCloseMessage = () => {\n    setIsMessageOpen(false);\n  };\n\n  const handleCancel = () => {\n    navigate('/'); // Navigate to the login page\n  };\n\n  // const handleRegister = (e) => {\n  //   e.preventDefault(); // Prevent form submission default behavior\n\n  //   // if (email === '') {\n  //   //   // setMessage('Please enter a valid email');\n  //   //   // setIsMessageOpen(true);\n  //   // } else if (username === '') {\n  //   //   // setMessage('Please enter a valid username');\n  //   //   // setIsMessageOpen(true);\n  //   // } else if (password === '') {\n  //   //   // setMessage('Please enter a valid password');\n  //   //   // setIsMessageOpen(true);\n  //   // } else {\n\n  //   const uppercaseRegex = /[A-Z]/;\n  //   const lowercaseRegex = /[a-z]/;\n  //   const numberRegex = /[0-9]/;\n  //   const symbolRegex = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/;\n\n  //   // Check if email, username, and password are provided\n  //   if (email === '' || username === '' || password === '') {\n  //     setMessage('Please fill in all fields');\n  //     setIsMessageOpen(true);\n  //     return;\n  //   }\n\n  //   // Check if password meets criteria\n  //   if (\n  //     password.length < 8 ||\n  //     !uppercaseRegex.test(password) ||\n  //     !lowercaseRegex.test(password) ||\n  //     !numberRegex.test(password) ||\n  //     !symbolRegex.test(password)\n  //   ) {\n  //     setMessage(\n  //       'Password must be at least 8 characters long and contain uppercase letters, lowercase letters, numbers, and symbols'\n  //     );\n  //     setIsMessageOpen(true);\n  //     return;\n  //   }\n\n  //   // Assuming localStorage key for users is 'users'\n  //   const existingUsers = JSON.parse(localStorage.getItem('users')) || [];\n\n  //   // Check if the username already exists using a loop\n  //   let userExists = false;\n  //   for (const user of existingUsers) {\n  //     if (user.email === email) {\n  //       userExists = true;\n  //       break;\n  //     }\n  //   }\n\n  //   if (userExists) {\n  //     setMessage('Email already exists. Please choose a different one.');\n  //     setData(true);\n  //     setIsMessageOpen(true);\n  //   } else {\n  //     // Add the new user to the local storage\n  //     const newUser = { email, username, password };\n  //     existingUsers.push(newUser);\n  //     localStorage.setItem('users', JSON.stringify(existingUsers));\n  //     setData(false);\n  //     // Notify the user about successful registration\n  //     setMessage('Registration successful!');\n  //     setIsMessageOpen(true);\n  //   }\n  //   // }\n  // };\n\n  const handleOkMessage = () => {\n    setIsMessageOpen(false);\n    navigate('/');\n  };\n\n  return (\n    <form className='register-container' onSubmit={handleRegister}>\n      {' '}\n      {/* Added onSubmit event */}\n      <div>\n        <h2>Admin Registration</h2>\n        <div id='register'>\n          <label htmlFor='mail'>Email</label>\n          <input\n            id='mail'\n            type='email'\n            placeholder='enter email'\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <label htmlFor='username'>Username</label>\n          <input\n            id='username'\n            type='text'\n            placeholder='enter username'\n            value={username}\n            required\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <label htmlFor='pass'>Password</label>\n          <input\n            id='pass'\n            type='password'\n            placeholder='enter password'\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button className='button muted-button' type='submit'>\n            {' '}\n            {/* Added type=\"submit\" */}\n            Register\n          </button>\n          <button\n            style={{\n              backgroundColor: 'red',\n              marginTop: '10px',\n              color: 'white',\n            }}\n            className='button muted-button'\n            onClick={handleCancel}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n      <MessageModal\n        isOpen={isMessageOpen}\n        message={message}\n        onConfirm={handleOkMessage}\n        onClose={handleCloseMessage}\n        data={data}\n      />\n    </form>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}