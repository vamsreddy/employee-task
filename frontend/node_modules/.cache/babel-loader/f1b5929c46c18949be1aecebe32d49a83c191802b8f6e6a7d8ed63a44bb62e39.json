{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/message.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageModal = ({\n  isOpen,\n  message,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    contentLabel: \"Message Modal\",\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        maxWidth: '400px',\n        // Adjust the maximum width as per your requirement\n        maxHeight: '80vh',\n        // Adjust the maximum height as per your requirement\n        overflow: 'auto' // Enable scrolling if the content overflows the modal\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageModal;\nexport default MessageModal;\nvar _c;\n$RefreshReg$(_c, \"MessageModal\");","map":{"version":3,"names":["React","Modal","jsxDEV","_jsxDEV","MessageModal","isOpen","message","onClose","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","maxWidth","maxHeight","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/message.js"],"sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nconst MessageModal = ({ isOpen, message, onClose }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onClose}\n      contentLabel='Message Modal'\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          maxWidth: '400px', // Adjust the maximum width as per your requirement\n          maxHeight: '80vh', // Adjust the maximum height as per your requirement\n          overflow: 'auto', // Enable scrolling if the content overflows the modal\n        },\n      }}\n    >\n      <h2>Message</h2>\n      <p>{message}</p>\n      <button onClick={onClose}>Close</button>\n    </Modal>\n  );\n};\n\nexport default MessageModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EACrD,oBACEJ,OAAA,CAACF,KAAK;IACJI,MAAM,EAAEA,MAAO;IACfG,cAAc,EAAED,OAAQ;IACxBE,YAAY,EAAC,eAAe;IAC5BC,KAAK,EAAE;MACLC,OAAO,EAAE;QACPC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,MAAM;QACnBC,SAAS,EAAE,uBAAuB;QAClCC,QAAQ,EAAE,OAAO;QAAE;QACnBC,SAAS,EAAE,MAAM;QAAE;QACnBC,QAAQ,EAAE,MAAM,CAAE;MACpB;IACF,CAAE;IAAAC,QAAA,gBAEFlB,OAAA;MAAAkB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtB,OAAA;MAAAkB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtB,OAAA;MAAQuB,OAAO,EAAEnB,OAAQ;MAAAc,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEZ,CAAC;AAACE,EAAA,GAzBIvB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}