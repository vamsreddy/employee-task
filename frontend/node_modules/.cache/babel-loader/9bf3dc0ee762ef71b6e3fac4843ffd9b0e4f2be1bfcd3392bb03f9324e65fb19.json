{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { employeesData } from '../../data/employees';\nimport List from './List';\nimport Create from './create';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [employees, setEmployees] = useState(employeesData);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [message, setMessage] = useState(''); // State for message content\n  const [isMessageOpen, setIsMessageOpen] = useState(false); // State for message modal visibility\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedData = localStorage.getItem('employees_data');\n    if (!storedData) {\n      localStorage.setItem('employees_data', JSON.stringify(employeesData));\n      setEmployees(employeesData);\n    } else {\n      const parsedData = JSON.parse(storedData);\n      setEmployees(parsedData);\n    }\n  }, []);\n  const handleEdit = id => {\n    const [employee] = employees.filter(employee => employee.id === id);\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n    navigate('/edit/' + id);\n  };\n  const handleDelete = id => {\n    const employee = employees.find(employee => employee.id === id);\n    if (window.confirm(`Are you sure you want to delete ${employee.firstName} ${employee.lastName}'s data?`)) {\n      const employeesCopy = employees.filter(employee => employee.id !== id);\n      localStorage.setItem('employees_data', JSON.stringify(employeesCopy));\n      setEmployees(employeesCopy);\n      setMessage(`Deleted! ${employee.firstName} ${employee.lastName}'s data has been deleted.`);\n      setIsMessageOpen(true); // Open the message modal\n    }\n  };\n  const handleCloseMessage = () => {\n    setIsMessageOpen(false); // Close the message modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding,\n        setIsAuthenticated: setIsAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        employees: employees,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Create, {\n      employees: employees,\n      setEmployees: setEmployees,\n      setIsAdding: setIsAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      isOpen: isMessageOpen,\n      message: message,\n      onClose: handleCloseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Nxv0rhC8jzOeGF2jEZPGiiuSk9g=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","employeesData","List","Create","Header","useNavigate","MessageModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","setIsAuthenticated","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","isAdding","setIsAdding","isEditing","setIsEditing","message","setMessage","isMessageOpen","setIsMessageOpen","navigate","storedData","localStorage","getItem","setItem","JSON","stringify","parsedData","parse","handleEdit","id","employee","filter","handleDelete","find","window","confirm","firstName","lastName","employeesCopy","handleCloseMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { employeesData } from '../../data/employees';\nimport List from './List';\nimport Create from './create';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [employees, setEmployees] = useState(employeesData);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [message, setMessage] = useState(''); // State for message content\n  const [isMessageOpen, setIsMessageOpen] = useState(false); // State for message modal visibility\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('employees_data');\n    if (!storedData) {\n      localStorage.setItem('employees_data', JSON.stringify(employeesData));\n      setEmployees(employeesData);\n    } else {\n      const parsedData = JSON.parse(storedData);\n      setEmployees(parsedData);\n    }\n  }, []);\n\n  const handleEdit = (id) => {\n    const [employee] = employees.filter((employee) => employee.id === id);\n\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n    navigate('/edit/' + id);\n  };\n\n  const handleDelete = (id) => {\n    const employee = employees.find((employee) => employee.id === id);\n\n    if (\n      window.confirm(\n        `Are you sure you want to delete ${employee.firstName} ${employee.lastName}'s data?`\n      )\n    ) {\n      const employeesCopy = employees.filter((employee) => employee.id !== id);\n      localStorage.setItem('employees_data', JSON.stringify(employeesCopy));\n      setEmployees(employeesCopy);\n\n      setMessage(\n        `Deleted! ${employee.firstName} ${employee.lastName}'s data has been deleted.`\n      );\n      setIsMessageOpen(true); // Open the message modal\n    }\n  };\n\n  const handleCloseMessage = () => {\n    setIsMessageOpen(false); // Close the message modal\n  };\n\n  return (\n    <div className='container'>\n      {!isAdding && !isEditing && (\n        <>\n          <Header\n            setIsAdding={setIsAdding}\n            setIsAuthenticated={setIsAuthenticated}\n          />\n          <List\n            employees={employees}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n        </>\n      )}\n      {isAdding && (\n        <Create\n          employees={employees}\n          setEmployees={setEmployees}\n          setIsAdding={setIsAdding}\n        />\n      )}\n      <MessageModal\n        isOpen={isMessageOpen}\n        message={message}\n        onClose={handleCloseMessage}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACE,aAAa,CAAC;EACzD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM2B,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACd,MAAM2B,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACzD,IAAI,CAACF,UAAU,EAAE;MACfC,YAAY,CAACE,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAAC/B,aAAa,CAAC,CAAC;MACrEc,YAAY,CAACd,aAAa,CAAC;IAC7B,CAAC,MAAM;MACL,MAAMgC,UAAU,GAAGF,IAAI,CAACG,KAAK,CAACP,UAAU,CAAC;MACzCZ,YAAY,CAACkB,UAAU,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAM,CAACC,QAAQ,CAAC,GAAGvB,SAAS,CAACwB,MAAM,CAAED,QAAQ,IAAKA,QAAQ,CAACD,EAAE,KAAKA,EAAE,CAAC;IAErEnB,mBAAmB,CAACoB,QAAQ,CAAC;IAC7BhB,YAAY,CAAC,IAAI,CAAC;IAClBK,QAAQ,CAAC,QAAQ,GAAGU,EAAE,CAAC;EACzB,CAAC;EAED,MAAMG,YAAY,GAAIH,EAAE,IAAK;IAC3B,MAAMC,QAAQ,GAAGvB,SAAS,CAAC0B,IAAI,CAAEH,QAAQ,IAAKA,QAAQ,CAACD,EAAE,KAAKA,EAAE,CAAC;IAEjE,IACEK,MAAM,CAACC,OAAO,CACX,mCAAkCL,QAAQ,CAACM,SAAU,IAAGN,QAAQ,CAACO,QAAS,UAC7E,CAAC,EACD;MACA,MAAMC,aAAa,GAAG/B,SAAS,CAACwB,MAAM,CAAED,QAAQ,IAAKA,QAAQ,CAACD,EAAE,KAAKA,EAAE,CAAC;MACxER,YAAY,CAACE,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACa,aAAa,CAAC,CAAC;MACrE9B,YAAY,CAAC8B,aAAa,CAAC;MAE3BtB,UAAU,CACP,YAAWc,QAAQ,CAACM,SAAU,IAAGN,QAAQ,CAACO,QAAS,2BACtD,CAAC;MACDnB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMqB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BrB,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACEjB,OAAA;IAAKuC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvB,CAAC9B,QAAQ,IAAI,CAACE,SAAS,iBACtBZ,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACExC,OAAA,CAACJ,MAAM;QACLe,WAAW,EAAEA,WAAY;QACzBP,kBAAkB,EAAEA;MAAmB;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACF5C,OAAA,CAACN,IAAI;QACHY,SAAS,EAAEA,SAAU;QACrBqB,UAAU,EAAEA,UAAW;QACvBI,YAAY,EAAEA;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA,eACF,CACH,EACAlC,QAAQ,iBACPV,OAAA,CAACL,MAAM;MACLW,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BI,WAAW,EAAEA;IAAY;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF,eACD5C,OAAA,CAACF,YAAY;MACX+C,MAAM,EAAE7B,aAAc;MACtBF,OAAO,EAAEA,OAAQ;MACjBgC,OAAO,EAAER;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvC,EAAA,CAhFIF,SAAS;EAAA,QAOIN,WAAW;AAAA;AAAAkD,EAAA,GAPxB5C,SAAS;AAkFf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}