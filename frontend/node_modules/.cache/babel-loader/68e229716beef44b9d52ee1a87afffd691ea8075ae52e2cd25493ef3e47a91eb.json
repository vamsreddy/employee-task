{"ast":null,"code":"var _jsxFileName = \"/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/create.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport emailjs from '@emailjs/browser';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\nimport ConfirmationModal from './ConfirmationModal'; // Import the ConfirmationModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const employees = JSON.parse(localStorage.getItem('employees_data'));\n  const [isAdding, setIsAdding] = useState(false);\n  const [isMessageOpen, setIsMessageOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isConfirmationOpen, setIsConfirmationOpen] = useState(false);\n  useEffect(() => {\n    emailjs.init({\n      publicKey: 'Vaa7zzUhJKzwPYlG0'\n    });\n  });\n  const handleAdd = async e => {\n    e.preventDefault();\n    if (!firstName || !lastName || !email) {\n      setMessage('Error! All fields are required.');\n      setIsMessageOpen(true);\n      return;\n    }\n    const existingEmployee = employees === null || employees === void 0 ? void 0 : employees.find(emp => emp.email === email);\n    if (existingEmployee) {\n      setMessage('User is already registered with the same email');\n      setIsMessageOpen(true);\n      return; // Exit the function early if user already exists\n    }\n    const id = (employees === null || employees === void 0 ? void 0 : employees.length) + 1;\n    const newEmployee = {\n      id,\n      firstName,\n      lastName,\n      email\n    };\n    const updatedEmployees = [...employees, newEmployee];\n    localStorage.setItem('employees_data', JSON.stringify(updatedEmployees));\n    try {\n      // Send email using EmailJS\n      const templateParams = {\n        to_name: `${firstName} ${lastName}`,\n        email: email,\n        subject: 'Welcome to the Company'\n      };\n      console.log(email);\n      await emailjs.send('service_qm7s8ga',\n      // Replace with your EmailJS Service ID\n      'template_eibtv84',\n      // Replace with your EmailJS Template ID\n      templateParams);\n      setMessage(`Added! ${firstName} ${lastName}'s data has been added, and a welcome email has been sent.`);\n      setIsMessageOpen(true);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to send email', error);\n      setMessage('Error! Failed to send email.');\n      setIsMessageOpen(true);\n    }\n  };\n  const handleCancel = () => {\n    setIsConfirmationOpen(true);\n  };\n  const confirmCancel = () => {\n    setIsAdding(false);\n    navigate('/dashboard');\n  };\n  const cancelCancel = () => {\n    setIsConfirmationOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        required: true,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        required: true,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button muted-button\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button muted-button\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      isOpen: isMessageOpen,\n      message: message,\n      onClose: () => setIsMessageOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      isOpen: isConfirmationOpen,\n      message: \"Are you sure you want to cancel adding a new employee?\",\n      onConfirm: confirmCancel,\n      onCancel: cancelCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"pAKdm0ZxlNpTLAh+yQLa9oouTvs=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","emailjs","MessageModal","ConfirmationModal","jsxDEV","_jsxDEV","Create","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","navigate","employees","JSON","parse","localStorage","getItem","isAdding","setIsAdding","isMessageOpen","setIsMessageOpen","message","setMessage","isConfirmationOpen","setIsConfirmationOpen","init","publicKey","handleAdd","e","preventDefault","existingEmployee","find","emp","id","length","newEmployee","updatedEmployees","setItem","stringify","templateParams","to_name","subject","console","log","send","error","handleCancel","confirmCancel","cancelCancel","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","value","required","onChange","target","style","marginTop","onClick","isOpen","onClose","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["/home/vamshidhar/Desktop/projects/ReactTask/employee/src/Components/Dashboard/create.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport emailjs from '@emailjs/browser';\nimport MessageModal from '../Dashboard/message'; // Import the MessageModal component\nimport ConfirmationModal from './ConfirmationModal'; // Import the ConfirmationModal component\n\nconst Create = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const employees = JSON.parse(localStorage.getItem('employees_data'));\n  const [isAdding, setIsAdding] = useState(false);\n  const [isMessageOpen, setIsMessageOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isConfirmationOpen, setIsConfirmationOpen] = useState(false);\n\n  useEffect(() => {\n    emailjs.init({\n      publicKey: 'Vaa7zzUhJKzwPYlG0',\n    });\n  });\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email) {\n      setMessage('Error! All fields are required.');\n      setIsMessageOpen(true);\n      return;\n    }\n\n    const existingEmployee = employees?.find((emp) => emp.email === email);\n    if (existingEmployee) {\n      setMessage('User is already registered with the same email');\n      setIsMessageOpen(true);\n      return; // Exit the function early if user already exists\n    }\n    const id = employees?.length + 1;\n    const newEmployee = {\n      id,\n      firstName,\n      lastName,\n      email,\n    };\n\n    const updatedEmployees = [...employees, newEmployee];\n    localStorage.setItem('employees_data', JSON.stringify(updatedEmployees));\n    try {\n      // Send email using EmailJS\n      const templateParams = {\n        to_name: `${firstName} ${lastName}`,\n        email: email,\n        subject: 'Welcome to the Company',\n      };\n      console.log(email);\n      await emailjs.send(\n        'service_qm7s8ga', // Replace with your EmailJS Service ID\n        'template_eibtv84', // Replace with your EmailJS Template ID\n        templateParams\n      );\n\n      setMessage(\n        `Added! ${firstName} ${lastName}'s data has been added, and a welcome email has been sent.`\n      );\n      setIsMessageOpen(true);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to send email', error);\n      setMessage('Error! Failed to send email.');\n      setIsMessageOpen(true);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsConfirmationOpen(true);\n  };\n\n  const confirmCancel = () => {\n    setIsAdding(false);\n    navigate('/dashboard');\n  };\n\n  const cancelCancel = () => {\n    setIsConfirmationOpen(false);\n  };\n\n  return (\n    <div className='small-container'>\n      <form onSubmit={handleAdd}>\n        <h1>Add Employee</h1>\n        <label htmlFor='firstName'>First Name</label>\n        <input\n          id='firstName'\n          type='text'\n          name='firstName'\n          value={firstName}\n          required\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n        <label htmlFor='lastName'>Last Name</label>\n        <input\n          id='lastName'\n          type='text'\n          name='lastName'\n          value={lastName}\n          required\n          onChange={(e) => setLastName(e.target.value)}\n        />\n        <label htmlFor='email'>Email</label>\n        <input\n          id='email'\n          type='email'\n          name='email'\n          value={email}\n          required\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input className='button muted-button' type='submit' value='Add' />\n          <input\n            className='button muted-button'\n            type='button'\n            value='Cancel'\n            onClick={handleCancel}\n          />\n        </div>\n      </form>\n      <MessageModal\n        isOpen={isMessageOpen}\n        message={message}\n        onClose={() => setIsMessageOpen(false)}\n      />\n      <ConfirmationModal\n        isOpen={isConfirmationOpen}\n        message='Are you sure you want to cancel adding a new employee?'\n        onConfirm={confirmCancel}\n        onCancel={cancelCancel}\n      />\n    </div>\n  );\n};\n\nexport default Create;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}